start_global

start_vars
intreg x;
intreg y;
caracter z;
caracter c;
sir s <- "hello world";
intreg hello[10];
intreg arr[10] <- {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
sfarsit_vars

start_clasa
clasa B2 {
    chh : caracter;
    x   : intreg;
    zz[8] : caracter;
    intreg foc(sir wx, real ww)
    {
        wx <- "hello there sunshine";
        intreg x;
        real wy;
        wy <- 2.0;
    }
};
sfarsit_clasa

start_functions
real foo(intreg sdfs, intreg sgsg);
intreg functie(real w, intreg m) {
    w <- 2.0;
    intreg yy;
    caracter B3;
}
sfarsit_functions

sfarsit_global

start_programel
caracter bibi;
x <- 2; y <- 4; z <- 'x';
z <- 'z';
y <- 345 + y + 56 + 7;
hello <- {20,20,20,20,20,20,20,20};
B2 A { chh <- 'c' ; } ; 
A.chh <- 'm';
A.x <- (20 * 5 + 4 + 3 % 2 + 22);
A.zz <- {'a','b','c','d','e','f','g','h'};
A.zz[1] <- 'z';


daca(8 % 4 == 2) {
    intreg lmnop;
    caracter charact;
    rupe;
}
altfel {
    intreg salutari[10,3];
    c <- 'a';
}

catTimp (12 != 12) {
    c <- 'y';
    caracter yolo <- 'h';
}

bucla {
    daca( x > 5) {
        intreg x;
        intreg z[10];
        foo(x, z[1]);
        rupe;
    } altfel {
        x <- x + 1 + 3;
    }
}

daca(10 % 4 == 2) {
    rupe;
}
bool is_true <- fals;
daca (((is_true) || (adevarat)) && (fals)) {
    rupe;
}

lucreaza {
    caracter chhhhh <- 'a';
    sir ccc;

} catTimp (12 != 1)

pentru (intreg i32 <- 0; i32 < 10; i32 <- i32 + 1) {
    i32 <- i32;
    intreg lol;
}

functie(foo(2, 2), A.x);
Print(x + y);
Print("hello");
arr[1] <- 12;
arr[2] <- 13;

Print(adevarat || fals);
TypeOf(12);
TypeOf('c');
TypeOf("string");
Print(A.x);
Print(A.chh);
TypeOf(A.x);

foo(A.foc("hellp", 2.2), 3);
A.foc("1", 2.2);
functie(2.2, 1);
B2 B;
B.x <- 2;
TypeOf(B);

sfarsit_programel